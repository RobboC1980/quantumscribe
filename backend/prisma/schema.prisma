datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

model User {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String    @unique
  passwordHash String    @map("password_hash")
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt    DateTime  @default(now()) @map("updated_at") @db.Timestamptz
  projects     Project[]

  @@map("users")
  @@schema("auth")
}

model Project {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ownerId     String   @map("owner_id") @db.Uuid
  name        String
  description String   @default("")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt   DateTime @default(now()) @map("updated_at") @db.Timestamptz
  epics       Epic[]
  owner       User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  @@map("projects")
  @@schema("public")
}

model Epic {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  projectId   String   @map("project_id") @db.Uuid
  title       String
  description String   @default("")
  sortOrder   Int      @default(0) @map("sort_order")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt   DateTime @default(now()) @map("updated_at") @db.Timestamptz
  stories     Story[]
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("epics")
  @@schema("public")
}

enum StoryStatus {
  TODO        @map("todo")
  IN_PROGRESS @map("in_progress")
  DONE        @map("done")

  @@map("story_status")
  @@schema("public")
}

model Story {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  epicId      String      @map("epic_id") @db.Uuid
  title       String
  description String      @default("")
  status      StoryStatus @default(TODO)
  sortOrder   Int         @default(0) @map("sort_order")
  createdAt   DateTime    @default(now()) @map("created_at") @db.Timestamptz
  updatedAt   DateTime    @default(now()) @map("updated_at") @db.Timestamptz
  epic        Epic        @relation(fields: [epicId], references: [id], onDelete: Cascade)

  @@map("stories")
  @@schema("public")
}
